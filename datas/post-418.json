{
    "link": "https://bbs.nga.cn/read.php?tid=42168134",
    "title": "请问反代的原理是什么？",
    "post_time": "2024-10-22 18:31",
    "uid": "65605396",
    "content": "正向代理的原理我大概明白：",
    "replies": [
        {
            "mid": "65583305",
            "mtime": "2024-10-22 18:36",
            "mcontent": "反向代理就是你知道你访问的是什么网站，但是你不知道真正访问的是哪个网站。"
        },
        {
            "mid": "65605396",
            "mtime": "2024-10-22 18:42",
            "mcontent": "你的意思是，我反向代理访问谷歌，我成功刷出谷歌页面了，但我不知道我访问的是哪个谷歌？只有一个谷歌啊。"
        },
        {
            "mid": "65583305",
            "mtime": "2024-10-22 18:47",
            "mcontent": "歌谷有没有用反向代理是不知道的。假设谷歌用了反向代理，代理了谷歌内部集群节点的任意一个服务器，你是不知道的。"
        },
        {
            "mid": "65605396",
            "mtime": "2024-10-22 18:53",
            "mcontent": "我只知道谷歌被墙了，我想访问，只能用代理……"
        },
        {
            "mid": "65583305",
            "mtime": "2024-10-22 19:07",
            "mcontent": "那你直接用正向代理就行了。反向代理是给服务端用的，比如说某个网站运维改了点配置反向代理了谷歌，你就能通过访问这个网站从而访问谷歌。"
        },
        {
            "mid": "60196453",
            "mtime": "2024-10-22 19:38",
            "mcontent": "假设谷歌有一百台服务器,每台服务器有100人的访问上限,一共能被1W人访问你访问谷歌的反代服务器的时候.反代服务器会根据那100台服务器的压力去访问某一台,然后将你需要访问的资源返回给你这个过程中你并不知道反代服务器访问了那一台谷歌的服务器"
        },
        {
            "mid": "65605396",
            "mtime": "2024-10-22 19:52",
            "mcontent": "反向代理的话，你通过反向代理服务器访问谷歌服务器，反代服务器会根据各个谷歌服务器的的访问人数选择，挑个人少速度快的服务器访问，再发给你访问信息？   那反代服务器，是怎么访问被墙的网站的？(网站不设立反代服务器的话。)"
        },
        {
            "mid": "65137266",
            "mtime": "2024-10-22 20:03",
            "mcontent": "反向代理是放在多台资源服务器前面的，你每次请求资源，都是向反代服务器进行请求，因为其他服务器的地址并没有向你公开，或者其他服务器在内网你直接访问不到。反代服务器本身并不保存你要的资源，它只负责根据指定的规则，帮你从它另一台服务器里拿到资源，再发给你。"
        },
        {
            "mid": "43377109",
            "mtime": "2024-10-22 20:18",
            "mcontent": "反向代理和你一直问的正向代理的某个应用是完全不一样的存在。反向代理是一个服务端技术，他最大的用处就是隐藏真正的服务(因为这个服务的实现很纯粹，这导致他本身很脆弱)，提供额外的安全能力。"
        },
        {
            "mid": "65605396",
            "mtime": "2024-10-22 20:19",
            "mcontent": ""
        },
        {
            "mid": "65605396",
            "mtime": "2024-10-22 20:23",
            "mcontent": ""
        },
        {
            "mid": "43377109",
            "mtime": "2024-10-22 20:43",
            "mcontent": "没有半毛钱关系"
        },
        {
            "mid": "64328138",
            "mtime": "2024-10-22 21:40",
            "mcontent": "正向代理代理客户端，代理服务器替客户端访问目标服务器；然后再将数据返回客户端反向代理，代理服务器  客户端访问 反向代理服务器如nginx 服务器从后台服务器中返回数据到代理服务器最后返回客户端"
        },
        {
            "mid": "61096428",
            "mtime": "2024-10-23 08:40",
            "mcontent": "用户：正向代理您好，请帮我递个XX网的XXX。反向代理：我只能给你个锤子，别问哪里来的。"
        },
        {
            "mid": "42602407",
            "mtime": "2024-10-23 11:59",
            "mcontent": "正向代理就是你告诉代理服务器，你要访问什么网址，他访问了之后返回给你。所以你知道代理服务器的存在，你也能决定代理服务器要访问去哪里。而反向代理是一种透明代理，也就是你不知道中间有代理服务器的存在。你只知道访问了一个普通的网址，最终请求到哪里是由代理服务器决定的，你没办法控制也没办法知道。"
        },
        {
            "mid": "42937034",
            "mtime": "2024-10-23 12:32",
            "mcontent": "就是f5负载均衡吧好像，本质是地址转换，正向代理对应源地址转换，就是easyip，反向代理就是目的地址转换，也叫做映射，这个也是docker里喜欢用的技术底层大概都是路由表和策略表进行数据转发。正向代理一般用于VPN，反向代理一般用于代理甚至用于中间人攻击"
        },
        {
            "mid": "61165607",
            "mtime": "2024-10-24 20:11",
            "mcontent": "好容易理解的表达"
        },
        {
            "mid": "63655636",
            "mtime": "2024-10-30 18:16",
            "mcontent": "自搭梯子不好解决封ip的问题"
        },
        {
            "mid": "66299336",
            "mtime": "2024-10-31 09:53",
            "mcontent": "正向代理:     [你---->代理]----->服务器                             此时在外部看来是代理在发起请求，把真实的你隐藏的反向代理:    你---->[代理----->服务器]                             此时你只能看到你请求的代理，代理响应你的请求，其实真正给你提供服务的是服务器，把真实的服务器隐藏的"
        }
    ]
}