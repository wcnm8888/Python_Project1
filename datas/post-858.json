{
    "link": "https://bbs.nga.cn/read.php?tid=40044953",
    "title": "前辈们请问，为什么说C永生不死",
    "post_time": "2024-05-02 12:25",
    "uid": "60762430",
    "content": "小弟新手，从未接触过C，但是频频听到这个说法，C永远不会被取代，C永生不死，实在好奇，因此想请教前辈们，C为什么会有这种说法，是因为有什么不可取代的特性或者应用吗，感谢前辈们赐教",
    "replies": [
        {
            "mid": "42252406",
            "mtime": "2024-05-02 12:43",
            "mcontent": "因为没有限制，都能写。"
        },
        {
            "mid": "18678153",
            "mtime": "2024-05-02 18:49",
            "mcontent": "机器语言永不死，汇编语言永不死"
        },
        {
            "mid": "64757780",
            "mtime": "2024-05-02 13:39",
            "mcontent": "从来没听说过，不过你要这么说，我也可以找点理由给你解释。首先 C 的语法够通用，现代语言的语法基本都是类C的。其次 C 非常接近汇编，你甚至可以直接对着C代码手译成汇编，可移植性极高。"
        },
        {
            "mid": "65158880",
            "mtime": "2024-05-02 12:37",
            "mcontent": "系统内核就是C为主写的"
        },
        {
            "mid": "37449036",
            "mtime": "2024-05-02 12:43",
            "mcontent": "机器语言永生不死，现在有几个人没事写这玩意？"
        },
        {
            "mid": "60058968",
            "mtime": "2024-05-02 13:39",
            "mcontent": "财色交易永生不死。但东莞财色交易可以死。c就是这个例子中的财色交易。java或者c#或者什么别的语言就是东莞。用c做后端也是东莞，用c做游戏引擎开发也是东莞。用c编写系统也是东莞。只有c本身是财色交易本身。没有人能独占和控制这么一种概念性的东西。"
        },
        {
            "mid": "62546497",
            "mtime": "2024-05-02 16:05",
            "mcontent": "因为现在世界上还没有一个在ABI兼容性层面超过c的语言。哪怕cpp也不行(除非你只用里面的严格限定的部分子集，而且还高度依赖具体的编译器实现)，rust也不行。"
        },
        {
            "mid": "62153763",
            "mtime": "2024-05-02 16:23",
            "mcontent": "因为反汇编就是C"
        },
        {
            "mid": "41786417",
            "mtime": "2024-05-02 18:49",
            "mcontent": "因为c语言出的早，用的多，太多的基础设施是用c写的了"
        },
        {
            "mid": "61454292",
            "mtime": "2024-05-02 18:51",
            "mcontent": "高效简单，原理通用。学会c学其他语言的也快。因为c就是照着计算机底层设计的，除非计算机下面的结构变了，底层不变c就能一直用。像Python之类的语言出来很强并不是因为性能优势，而是便于开发。"
        },
        {
            "mid": "39617956",
            "mtime": "2024-05-03 12:13",
            "mcontent": "现在很多高级语言(包括Java)的编译器都是C写的你说呢"
        },
        {
            "mid": "10635466",
            "mtime": "2024-05-03 17:35",
            "mcontent": "说个笑话：有纠结C为什么这么牛逼的功夫，你都已经学会怎么用python了"
        },
        {
            "mid": "65839943",
            "mtime": "2024-06-20 04:33",
            "mcontent": "c能和硬件打交道。永远记得当时老师使用c让机箱叫起来的场景。"
        },
        {
            "mid": "65302865",
            "mtime": "2024-06-20 09:03",
            "mcontent": "当时c语言是为了写unix开发的。然后unix大火，可以移植到各个硬件上。从这开始，unix和c就有了很多的目标用户了。后来，c语言的标准化和易用性也加速了他的普及。导致了后续的许多有名的项目/语言都没想着绕开c语言。因为它在那个时候太好用了……最后导致了现在看到的很多东西，它的底层都有部分是c写的。所以现在就算不会写，也都会不可避免的看到。"
        },
        {
            "mid": "40317550",
            "mtime": "2024-06-20 09:15",
            "mcontent": "[https:://faultlore.com/blah/c-isnt-a-language/ 此网页不属于本网站，不保证其安全性  继续访问       取消 https://faultlore.com/blah/c-isnt-a-language/ https://faultlore.com/blah/c-isnt-a-language/]因为c abi"
        },
        {
            "mid": "731907",
            "mtime": "2024-06-23 23:13",
            "mcontent": "因为windows和linux都是用C写的？想要在这两个操作系统之上写高性能软件，那只有继续C？"
        },
        {
            "mid": "62255321",
            "mtime": "2024-06-23 23:14",
            "mcontent": "c语言积累各种库的遗产太多了，导致各家都想巴结着用现成的。"
        },
        {
            "mid": "42766902",
            "mtime": "2024-06-24 12:22",
            "mcontent": "c语言与汇编模型是一一对应的，汇编就是机器指令的助记符，高级语言就是c语言封装，c语言用来写基础库是很好的，写业务代码不好管理，bug太多了，有警告直接强转，指针毁一生"
        },
        {
            "mid": "63958521",
            "mtime": "2024-06-25 21:40",
            "mcontent": "楼上解释的够多了。但是搞清楚一点，不会死不等于流行/有前途。"
        }
    ]
}