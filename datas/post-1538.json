{
    "link": "https://bbs.nga.cn/read.php?tid=39156849",
    "title": "前端传数据给后端时，字符串类型的字段总是传\"\"",
    "post_time": "2024-01-31 10:51",
    "uid": "42696145",
    "content": "前端字符串类型的如果不传，前端就会传\"\"(长度为0的字符串)而不是传null",
    "replies": [
        {
            "mid": "8777681",
            "mtime": "2024-01-31 11:15",
            "mcontent": "前端没问题后端该做前后端接口传输的是字符串而非对象，一般情况下不具备完全的对象等同含义，这是http协议的限制同时，由字符串反序列化为对象的工作，一般情况下都是后端的工作"
        },
        {
            "mid": "63478635",
            "mtime": "2024-01-31 11:25",
            "mcontent": "前端不是JavaScript吗?在JavaScript里 \"\"和null区别不大啊.在if判断力都是false.也许你需要一个 StringUtils.isEmpty"
        },
        {
            "mid": "49140",
            "mtime": "2024-01-31 11:35",
            "mcontent": "语义上你是对的但是前端从input里拿到的是空字符串如果你需要区分的话还是得自己做"
        },
        {
            "mid": "42696145",
            "mtime": "2024-01-31 11:36",
            "mcontent": "那我怎么判断是确实是不传这个字段还是传这个字段这个字段的值就是空串呢"
        },
        {
            "mid": "39468066",
            "mtime": "2024-01-31 11:38",
            "mcontent": "\"\"，null，undefined，NaN，\"null\"，\"undefined\"，\"NaN\""
        },
        {
            "mid": "8777681",
            "mtime": "2024-01-31 11:57",
            "mcontent": "根据接口反序列化过程中的 对象-值 映射约定判断，由后端按约定实施映射编码。映射约定一般是项目中统一的规范化约定，如果你们项目上没有这个规范约定，应该向项目组负责接口规范的架构师等提出建立规范、按规范实施。"
        },
        {
            "mid": "43187732",
            "mtime": "2024-01-31 12:03",
            "mcontent": "有点好奇，这种情况下会用这个字段的null和空串的区别吗？"
        },
        {
            "mid": "42696145",
            "mtime": "2024-01-31 12:09",
            "mcontent": "如果传递的是个实体值，那么在数据库更新时默认行为是null值对应的字段不进行更新。不是null值的字段就会被更新。也就是说传\"\"会导致数据库的字段被更新为空串了。第二种: 在数据库中唯一索引的约束下null是可以重复的，空串不行"
        },
        {
            "mid": "8777681",
            "mtime": "2024-01-31 12:12",
            "mcontent": "其实真正按语义仔细想想更合适的是不传这个字段但这种情况下一般后端想想，会头更大，还还不如给传个空串了"
        },
        {
            "mid": "60780180",
            "mtime": "2024-01-31 15:23",
            "mcontent": "这个不是应该前后端在开始就应该协调好了吗.....这个可以前端去传值前先判断也可以后端接收后统一判断。"
        },
        {
            "mid": "62234533",
            "mtime": "2024-02-01 13:06",
            "mcontent": "如果是空的话 严格的说应该传undefined 虽然 null undefined 和 '' 都是 falsy的，但是如果原本是 string 类型的话，没数据的时候传了 null 有点奇怪的"
        },
        {
            "mid": "65137266",
            "mtime": "2024-02-01 18:37",
            "mcontent": "前端不会用到字符串是null的情况，不管是浏览器事件、dom里的值、常用组件库的参数，字符串都不会出现null的情况，给需要字符串的地方传null只会出现各种意外。所以前端维护这个变量的时候一定都是在用string而不是null类型。如果后端非得要null，前端就只能在发送请求之前给你转换一次，如果对象层级很深，比如要传的是对象里嵌套对象又嵌套，这个转换写起来还是比较麻烦的。再就是由于同样的原因，前端也很讨厌收到的数据里字符串给了个null，这又意味着需要转换。而后端写代码的时候本来就需要考虑到空串的情况，不然前端可能是按你要求传了null，但别人脚本调接口非给你个空串你咋办？所以不管前端转不转，后端都得处理，那干嘛还要前端改呢。当然你要是有区分null和空串的需求那你就让前端改吧，我是没想到啥场景必须区分这俩，至于你说的：(1)传空串导致字段被更新为空串。不想更新你可以if test检查来写动态sql，就算更新了我也觉得没啥问题，比如mysql里空串比null就多占一个字节，缺那点空间？(2)在数据库中唯一索引的约束下null是可以重复的，空串不行。你都在字符串列上建唯一索引了，为啥还想着需要这列能允许重复值呢？不允许重复才是建唯一索引的目的吧"
        },
        {
            "mid": "41724043",
            "mtime": "2024-02-01 22:29",
            "mcontent": "我们小公司，这种情况我们是后端处理。本身也不是复杂的东西。不难为前端同事。"
        },
        {
            "mid": "60615600",
            "mtime": "2024-02-01 23:03",
            "mcontent": "虽然我感觉也没啥问题，不过真要较真的话让前端请求前interceptor把payload递归都转一下呗，前后端都可以做但是建议还是前端去做，因为虽然也没啥性能损耗，不过毕竟服务器算力能省就省"
        },
        {
            "mid": "62221327",
            "mtime": "2024-02-02 00:31",
            "mcontent": "感觉“”更好点，网络开销更小"
        },
        {
            "mid": "14740815",
            "mtime": "2024-02-03 13:10",
            "mcontent": "前后端都可以处理，我做前端，后端如果不需要某个参数的话会直接删除这个参数，连null也不会出现"
        },
        {
            "mid": "26270019",
            "mtime": "2024-02-04 12:29",
            "mcontent": "我的建议是，从业务上把两者定义成相同含义，虽然说如果java这种，null和空串做成不同含义比较容易，但是这样前端以及某些客户端语言其实不好判断两者区别的(不是说不能，是实现起来不爽"
        },
        {
            "mid": "43331470",
            "mtime": "2024-02-06 08:32",
            "mcontent": "我做爬虫的，见过的大部分接口都是空字符串等同于没传， 应该是后端在做判断"
        },
        {
            "mid": "16962163",
            "mtime": "2024-02-06 23:07",
            "mcontent": "你改吧zsbd"
        }
    ]
}