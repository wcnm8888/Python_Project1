{
    "link": "https://bbs.nga.cn/read.php?tid=38899501",
    "title": "问个关于GPL的问题",
    "post_time": "2024-01-04 17:04",
    "uid": "62546497",
    "content": "我这儿有个别人的开源的gpl协议的库，自从2018年之后就没有更新了。我想给他加新功能，但是它是托管在sourceforge的。我可以自己开个github repo给他代码丢进去，然后用我自己的MIT协议的项目以git submodule形式引用这个库不？会污染我的项目不？",
    "replies": [
        {
            "mid": "37711573",
            "mtime": "2024-01-24 03:06",
            "mcontent": "我可以自己开个github repo给他代码丢进去，然后用我自己的MIT协议的项目以git submodule形式引用这个库不？会污染我的项目不？会，在大部分司法管辖区GPL和非GPL应用必须以比“臂长”更“远”的方式交互，比如进程间通信或者管道但是我不知道它是三个同时生效还是只有最宽松的那个生效因为GPL v2和v3部分互斥，所以一般来说开发者可以任选其一再发布，但并不总是如此免责声明：我在中国没有律师资格，以上一切内容都不是法律建议"
        },
        {
            "mid": "62627428",
            "mtime": "2024-01-24 10:50",
            "mcontent": "gpl只允许以更严格的协议再授权，如果确定是gpl项目那么起效的肯定是gplv3，除非你刻意去用gplv2那个版本起分支submodule不是重点，重点是无论你用什么形式引用v3版本授权的库了，mit都肯定是不行的，如果想保持两个库互相不干扰，mit库留个指南让用户自己去拉取编译gpl的东西以上个人建议，可能完全不对"
        },
        {
            "mid": "60185547",
            "mtime": "2024-01-24 11:14",
            "mcontent": "直接submodule恐怕不行，如果是只引用编译出来的二进制文件可能可以"
        },
        {
            "mid": "60519280",
            "mtime": "2024-01-26 18:38",
            "mcontent": "unity不就用的freeimage，也没见开源我自己也魔改了个freeimage，比臃肿的imagemagick爽多了"
        }
    ]
}