{
    "link": "https://bbs.nga.cn/read.php?tid=41088909",
    "title": "如何实现一个语法解析器？",
    "post_time": "2024-08-02 10:43",
    "uid": "63853781",
    "content": "在实际工作中中会遇到奇怪的语法格式类似于XML，JSON等已经有完整实现，各种情况都考虑的比较清楚。但我面对的的格式目前GitHub搜不到通用解析器(例如vqm，edif)",
    "replies": [
        {
            "mid": "65855073",
            "mtime": "2024-08-02 11:23",
            "mcontent": "flex+bison"
        },
        {
            "mid": "1781995",
            "mtime": "2024-08-02 12:55",
            "mcontent": "Java这边有个通用的语法解析库叫javacc，以及基于javacc又有一些解析json、sql等等的库，参考一下应该会有所帮助。"
        },
        {
            "mid": "43089971",
            "mtime": "2024-08-02 14:12",
            "mcontent": "flex啥的都老古董了，最简单的是parser combinator，即解析器组合子，写起parser来如喝水"
        },
        {
            "mid": "63347905",
            "mtime": "2024-08-02 15:56",
            "mcontent": "如果只是解析数据格式，与其参考编译原理，不如参考算式解析更简单。比如，对于数据格式{\"arr\":[1,2],\"num\":3,\"str\":\"aa\"}解析过程相当于(arr*(1+2)+num*3+str*aa)无非是修改{}[]:,的实际操作而已(填数据，引用压栈)"
        },
        {
            "mid": "34941451",
            "mtime": "2024-09-08 09:16",
            "mcontent": "我之前用 python 写过一个简单的表达式解析器，做了词法分析和语义分析，支持整数，字符串，布尔三种类型，支持四则基本运算和自建函数。后来发现维护太费劲直接 eval 走起"
        },
        {
            "mid": "42199220",
            "mtime": "2024-09-08 14:00",
            "mcontent": "antlr吧zsbd"
        },
        {
            "mid": "60671763",
            "mtime": "2024-09-09 01:39",
            "mcontent": "最简单的就是直接递归下降咯，ast模型定出来很好写"
        }
    ]
}