{
    "link": "https://bbs.nga.cn/read.php?tid=39385800",
    "title": "[求助]只会Jetpack Compose 好找工作吗？",
    "post_time": "2024-02-23 19:47",
    "uid": "64608988",
    "content": "目前大四，双非二本，打算从事Android开发，学过Java和Kotlin的Android开发，Java的没学完就学Kotlin的了，目前学完了《第一行代码 Android》第三版，发现好多方法都过时了，边学边搜边改，总算学完了，学完的时候正好上学期开学，本来打算就这样投简历的，但是后面又了解到Jetpack Compose，发现这个新的UI框架是真的方便，就又学了一学期，秋招就没投简历。",
    "replies": [
        {
            "mid": "38460730",
            "mtime": "2024-02-23 23:05",
            "mcontent": "java和kotlin可以混一起，加新屎山可以写kt，除了维护旧项目根本不用碰java和xml。我认为RN/flutter跨平台非常好用，让js前端仔可以降本增效兼移动开发；会原生还是很重要写一些魔块，但是不用写原生UI。中小公司向跨平台/小程序靠拢是必然。纯原生的需求不会太大，但都是好公司才有需求。但是你想跟前端卷这个，前端人可太多了。compose虽然也在搞跨平台但是实在没人关注鸿蒙还是等华为有苹果的影响力和用户付费率之后再说吧"
        },
        {
            "mid": "64608988",
            "mtime": "2024-02-24 00:07",
            "mcontent": "感谢大佬解答，目前我还没了解过跨平台开发，看来有必要去学一学了。说起来最近写代码的时候准备去Github看看别人的界面图标动画是怎么写的，连着搜索四个发现我正在使用的开源软件都不是使用的compose，一下给我整不会了，感觉compose好像很小众似的，明明这么好用。"
        },
        {
            "mid": "62767347",
            "mtime": "2024-02-24 01:23",
            "mcontent": "我的观点是，如果你为了就业，可以开始把java和xml布局捡起来了，现在用kotlin+jet的都是好公司、大公司，至少也是研发有话语权的公司，双非二本基本不可能进去的。如果你是准备硕士毕业了再工作，是可以的，但是硕士干广义上的前端，还是一线开发岗位，会不会太奢侈了？技术很好，但是愿意招二本的公司不愿意尝试新技术，他们只想啃老技术啃到接不到活，然后把老员工开掉，再重新招会新技术的新员工。还能接到活的时候，要么想着跨平台降低成本，要么逼着你用老技术降低他招新人代替你的成本。"
        },
        {
            "mid": "64608988",
            "mtime": "2024-02-24 02:14",
            "mcontent": "啊这，看来我还是太理想了，之前还寻思着为什么还有用java和xml布局的。但凡学了kotlin，我感觉都不会再有想用java的。考研的话完全没准备，本来打算先找工作看看情况如何，不行再另做打算，就一心学安卓去了，两边都抓属实能力不够。现在看来似乎有些草率了，把学历这道坎给忘了。"
        },
        {
            "mid": "64799156",
            "mtime": "2024-02-24 23:12",
            "mcontent": "在某大厂实习过的斗胆回答一下。1.java和xml语法可以忘，但得会用。很多企业会有历史包袱，出现混用，技术栈过新，过旧情况都有可能。2.如上，这两种具体使用情况得看公司，不一定。3.会，现在的趋势就是大前端，很多公司已经在用跨端框架了，但原生仍有必要学，是地基，而且至少你面试肯定会用到。4.鸿蒙刚开始有影响力，具体还得看后续发展。最后，就个人面试经历而言，这两种技术在面试过程中占比不高，还是老几样出现得频繁。"
        },
        {
            "mid": "64608988",
            "mtime": "2024-02-25 07:21",
            "mcontent": "感谢大佬解答，看来跨平台技术是得学起来了。Java和xml我只学了基础，Material Design的xml控件没学过，动画也没学过，主题也没整太明白，我看好多国内软件都没适配黑暗主题，不知道这些是不是也必须得会。状态栏颜色也一直是我头疼的一个问题，之前还能用开源库Accompanist的SystemUiController来解决，前几天发现忽然被弃用了，不知道大佬有没有好的解决方法，我看谷歌官网让用edge to edge，我把示例项目给clone 运行也没看着实际效果，不知道是哪的问题。"
        },
        {
            "mid": "42776327",
            "mtime": "2024-02-26 18:50",
            "mcontent": "国内Compose的教程少，更新慢，最好还是去youtube上看教程，有些视频教程非常直观。"
        },
        {
            "mid": "64608988",
            "mtime": "2024-02-26 21:16",
            "mcontent": "感谢分享，有空看看，我目前在看Neil Smyth的书《Jetpack Compose 1.4》，讲得很细，好像出1.5了，没找到。"
        },
        {
            "mid": "43343197",
            "mtime": "2024-02-28 15:33",
            "mcontent": "compose感觉没太多公司用，kotlin相对普遍了，你还没毕业，最重要的还是基础知识，其实你最好的方法是找已经工作的学长，厚点脸皮请教下当前行情和侧重点。第二个重要的一点是尽快准备找实习，有没有实习经验是你后面找到正式工作的重要因素，还有，胆子大点，我也是和你一样学历，遗憾当年胆子太小，怕这怕那，都不敢投大公司简历。加油，同志！"
        },
        {
            "mid": "64608988",
            "mtime": "2024-02-28 17:21",
            "mcontent": "感谢前辈的经验，目前投了一些简历，发现的确compose比较小众，刚开始只投compose的，找半天没几个，还都已读不会，现在不管这么多了，是个安卓就投了。找学长感觉对我来说不太现实，就同级认识的人都没几个，要不然我为什么上论坛来问呢。话说实习原来这么重要啊，我一直都没太在意。"
        },
        {
            "mid": "64035940",
            "mtime": "2024-02-29 10:56",
            "mcontent": "数据结构与算法学的怎么样？校招还是比较看重这个的java还是要学的，java基础，java并发，java虚拟机相关都需要看下，校招肯定还是java基础为主设计模式面试也可能会问：推荐看下《android源码设计模式解析与实战》 不用全部学完，但至少得说一两个。android其实要学的东西挺多的，我放下面把，当然还不止这些java: java基础，java并发 [http:://concurrent.redspider.group/ 此网页不属于本网站，不保证其安全性  继续访问       取消 http://concurrent.redspider.group/ http://concurrent.redspider.group/]，java虚拟机 [https:://doocs.github.io/jvm/00-quickstart.html 此网页不属于本网站，不保证其安全性  继续访问       取消 https://doocs.github.io/jvm/00-quickstart.html https://doocs.github.io/jvm/00-quickstart.html]设计模式数据结构与算法android：常用三方库：网络框架(比如okhttp, retrofit...)，图片加载coil，Glide; 等等；jetpackhandler, hashMap(这两个最好看几遍源码)绘制流程，事件分发自定义viewrecyclerview listview四大组件kotlin架构：mvc mvp mvvm mvi一些加分项插件化、热修复flutter性能优化..."
        },
        {
            "mid": "34940373",
            "mtime": "2024-03-04 10:25",
            "mcontent": "震惊了，我才两年没写Android现在行情已经开始淘汰view了？如果你想靠Android吃饭，view体系你还是要学的，而且有必要深入学，无论是有很多非标准设备上没有compose,对你个人而言非常有帮助的，不要听前端仔话觉得没必要，除非你准备搞大前端，Android只是顺带兼容一下，那无所谓。具体来说，view体系是对下层引擎的抽象和实现，所有的ui表现都是具体对象的逻辑行为，measure的逻辑，layout的逻辑，draw的逻辑，view对于事件分发的逻辑，我这边的前端连ui是通过死循环一时都理解不了。在这个基础上你再去学响应式开发，你就会发现，现代声明式ui本质上就是响应式数据+自动化框架+命令式ui。"
        },
        {
            "mid": "64608988",
            "mtime": "2024-03-04 13:01",
            "mcontent": "感谢大佬的解答，前几天刚好面试了一下，Java方面没问多少，Android方面的确问到了，数据结构与算法也是，我都快忘完了，最后由于啥都不会，第一轮就给刷下来了。后续学习就参考大佬的解答了。"
        },
        {
            "mid": "64608988",
            "mtime": "2024-03-04 13:13",
            "mcontent": "感谢大佬的解答，大前端我感觉我现在没这么多时间来学了，只能先把Android给学会了。view体系我感觉的确比较重要，之前在Compose项目中嵌入View的时候啥都不会，给我整得很难受，但是view体系要怎么学呢？国内的深入Android开发的书好像都比较旧了，不知道学了有没有问题，一直没尝试。"
        },
        {
            "mid": "34940373",
            "mtime": "2024-03-05 10:43",
            "mcontent": "理解几个关键回调onMeasure 这个回调里决定当前view的实际尺寸onLayout 这个回调决定当前layout中子view如何放置布局onDraw 这个回调决定当前view如何绘制以上是关于绘制的，下面是关于事件的onDispatch 该回调决定当前的事件如何分发，手势事件是从父view从外到内分发给子view。onIntercept决定是否拦截事件，这个主要用来解决手势冲突，只有返回true onEvent回调才会被调用onEvent决定如何消耗当前事件，这个回调里你可以拿到当前触发的手势，比如按下或者抬起之类的，根据这个做对应的逻辑处理。"
        },
        {
            "mid": "64035940",
            "mtime": "2024-03-05 16:26",
            "mcontent": "view绘制流程这部分不会过时的, 可以看看android开发艺术探索。 自定义view可以看Android自定义控件开发入门与实战，这本书作者还出了一本进阶版，这本我还没看过。"
        },
        {
            "mid": "18378345",
            "mtime": "2024-03-05 16:29",
            "mcontent": "Jetpack Compose 目前还是比较小众，虽然肯定是日后的主流，但是目前要在工作上用到肯定还是以 xml 和 View 那一套体系为主。另外就像上面说的，flutter 也建议可以看一下，不用太深，了解就行了、目前感觉鸿蒙还不是主流，先把安卓的这一套搞好再说"
        }
    ]
}