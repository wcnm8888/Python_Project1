{
    "link": "https://bbs.nga.cn/read.php?tid=39401141",
    "title": "[算法] 老哥们，每次写算法，总是得特殊照顾0，1，这种是不是我算法没写好",
    "post_time": "2024-02-25 17:17",
    "uid": "62073702",
    "content": "每次写，运行的时候总是得多加if，感觉有点难受",
    "replies": [
        {
            "mid": "43089971",
            "mtime": "2024-02-25 17:31",
            "mcontent": "递归选手?我写haskell的时候经常有那种处理基本情况然后递归上去的写法,倒是挺爽的你光说个01也不清楚你是不是这种情况,不过覆盖边界条件是个好习惯"
        },
        {
            "mid": "62073702",
            "mtime": "2024-02-25 19:20",
            "mcontent": "就是有时候处理数组或者字符串的时候，总是得特化，如果输入是空，或者只有一个的情况。"
        },
        {
            "mid": "43089971",
            "mtime": "2024-02-25 19:32",
            "mcontent": "数组的话，01是合法输入吗？如果是的话其实正常情况下都是可以整合在一起的；如果不是的话，错误处理确实麻烦，不过要是能保证不会有非法输入，那不做错误处理也没问题字符串的话，你指的是按照空格分开输入这种？这种就是编译相关的内容了，一般情况下也不算难写吧可以给个具体的例子看看"
        },
        {
            "mid": "39468066",
            "mtime": "2024-02-25 20:13",
            "mcontent": "说的有点抽象，建议给个例子"
        },
        {
            "mid": "64388721",
            "mtime": "2024-02-25 20:35",
            "mcontent": "特殊照顾基本上没啥大问题，某些情况确实可以优化成完全不需要考虑0,1，但也只是实现细节，而非算法的核心。想学习优化细节，可对比官方题解看看。"
        },
        {
            "mid": "62073702",
            "mtime": "2024-02-25 20:38",
            "mcontent": "以前的不记得了，就刚刚看到的，取数组或者字符串的中间的值，就要特化0 总是感觉不舒服"
        },
        {
            "mid": "43089971",
            "mtime": "2024-02-25 20:56",
            "mcontent": "对长度为0的数组来说这个问题没有意义啊，这种情况下是要输出特殊的结果吗？那这是基本逻辑没办法简单的情况默认值的方法基本够用，你不如直接把题贴出来"
        },
        {
            "mid": "43089971",
            "mtime": "2024-02-25 21:02",
            "mcontent": "另外给你推荐一个三目运算符，可以在一定程度上把if隐藏起来，我反正非常喜欢res = arr_length == 0 ? 0 : arr[arr_length / 2];"
        },
        {
            "mid": "61937315",
            "mtime": "2024-02-25 23:39",
            "mcontent": "我刚开始刷力扣，和楼主情况一模一样，就是边界问题经常考虑不到"
        }
    ]
}