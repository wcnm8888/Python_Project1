{
    "link": "https://bbs.nga.cn/read.php?tid=41809248",
    "title": "有python经验，想学.net开发网站，求求大佬指点迷津",
    "post_time": "2024-09-26 16:15",
    "uid": "19218521",
    "content": "各位大佬好，小弟想开发一个有声小说的网站(非app)，需要初级功能大致是：",
    "replies": [
        {
            "mid": "64057759",
            "mtime": "2024-09-26 22:48",
            "mcontent": "不会c#，从java+前端的角度回答一下你的问题。结论是如果你打算全部自己搞非常麻烦，得好几个月都不一定能搞出来，个人收款也是个麻烦事，除非你打算开公司。对现在你的需求分析，以及对应你需要学习或者找的技术方案:前端内容有网站主页，作品列表页，作品详情页，用户主页，排行榜页面，作品编辑+发布页，付款页。管理员界面，作品的crud，用户登录权限管理之类的主页你如果要设计的和其他网站不一样则需要全新开发，得学css javascript,和一些前端框架react或者vue，然后找前端模板网站抄类似页面。后端功能有用户管理+权限管理(找个脚手架ruoyi之类的，部署需要服务器+db)上传功能需要对象存储(可以使用cloudflare r2比较便宜)收费系统需要对接支付宝或者微信，个人不支持api调用，需要走第三方或者开公司。作品管理点赞排行榜这些都给你算在上面那个ruoyi脚手架里面了，crud的功夫就行。其实里面还有很多内容，如果你想从0到1开发，是非常不建议的。如果你是富哥，建议开公司招人做"
        },
        {
            "mid": "63547769",
            "mtime": "2024-09-26 23:45",
            "mcontent": "支付接口，域名都需要企业备案，个人开发基本是走不通。只说功能上，想简单一点，可以用Blazor+antd+EFcore，C#的代码本身就比较好写，问题更多还是在前端和各种第三方接口对接上。或者Api+EFCore+react+antd也可以(vue那一套也可以，还更快，初学的话大概率表现性能还更好)。后端看看依赖注入，然后剩下的写功能就好，C#的后端不复杂。前端只要做好权限和路由规划，功能上也不麻烦。只是界面上你要搞听书的话还得专门做做不同设备的自适应，管理界面，个人维护的界面。这种频繁的上传下载，确实需要一个专门的云存储，要不然你买高带宽太贵。从学到做完，如果真的是计划商业用感觉全职怕也是得4个月+，还得是你勤快点。如果是说做个作业什么的就简单了，可能个把月就完了，反正意思到了就行了。你可以先开始建库，从网站的一点一点开始想。比如网站首页，有什么元素，那些元素是动态展示的，比如推荐，比如新书，比如活动信息，比如宣传图，那就需要专门的表去做设置。用户拿什么登录，微信扫码还是邮箱，还是手机验证码，还是邮箱。你又需要根据你的选择去做哪些准备。那用户表需要哪些字段，头像，昵称，用户名，涉不涉及用户注销，禁用，用户的操作需不需要做日志记录。充值(订单类型1)和消费的流水也要记录。用户下边有多本书，书下边有多个章节，那订单(订单类型2)是根据书或者章节来的，订单就需要做好标记做记录，还得留下冗余信息。订单会不会有会员订单，比如开个会员(订单类型3)随便听一个月。那是不是意味着订单是个主表，只放订单的公共信息[金额，用户，时间这些主要的]，具体针对哪类订单，订单快照的冗余信息就可以做子表。同时书还关联着点赞，推荐信息，推荐是根据数据算的，还是要允许你人为控制，如过要人为控制，是不是说书的信息还要加状态(热门，推荐，新书)等字段，这些字段可以共存是不是用Flag型枚举就好。推荐，点赞这些交互频繁，但相对不太重要的，是不是就可以走缓存，而不是频繁的和数据库交互，降低性能开支。前端的logo，宣传图，用户头像以及其他的图片信息，是不是可以做成一个总的图片表，然后去用id在各个需要用的地方做关联，方便维护也好统计，那图片表还得加一个数据类型。各个功能模块的路由应该先规划清楚，根路径下哪个功能块分别对应哪个路由规划好，写前端事半功倍。后端会不会报错，报错是不是该有全局的异常捕捉，以及统一的信息回复格式。那前端也就可以统一做处理了。真没下定决心的话，搞不好想的想的都放弃了..."
        },
        {
            "mid": "19218521",
            "mtime": "2024-09-27 02:21",
            "mcontent": "谢谢大佬，主要现在是想通过做项目来学，如果说先把听书功能做好，支付功能后续再扩展会不会简单一点？还是说最初设计开发的时候就得做这个功能？"
        },
        {
            "mid": "19218521",
            "mtime": "2024-09-27 02:23",
            "mcontent": "谢谢大佬讲得很详细啊，很多东西我自己也没考虑到，因为是第一次搞网站，对于性能这类的东西也没有经，主要现在是想通过做项目来学，如果说先把听书功能做好，支付功能后续再扩展会不会简单一点？还是说最初设计开发的时候就得做这个功能？ 现在想着就是一个阶段一个阶段的开发。"
        },
        {
            "mid": "64057759",
            "mtime": "2024-09-27 07:41",
            "mcontent": "最开始设计的时候后端可以预留字段，前端可以把入口关闭就行。其实只是当项目来学的话，都行，没有用户怎么折腾都可以"
        },
        {
            "mid": "19218521",
            "mtime": "2024-09-27 09:15",
            "mcontent": "感谢大佬指点！"
        },
        {
            "mid": "65179534",
            "mtime": "2024-09-29 11:16",
            "mcontent": "为啥想用dotnet开发呢？你不是会python吗？直接python开发就行了，对你来说，短期内不会有性能上的影响。而且对于个人开发者，python的开发效率高于dotnet的开发效率。你这个网站在国内备案估计很难吧，建议海外，支付也走海外，如果需要回流国内，办好手续就行。"
        },
        {
            "mid": "19218521",
            "mtime": "2024-09-29 18:05",
            "mcontent": "谢谢大佬，因为自己想学.net。感觉python除了数据方面，其他的不是长久之计。想问一下，python要做出这个网站的话，用哪种框架的呢？是不是只能用Django了？"
        },
        {
            "mid": "19984060",
            "mtime": "2024-10-08 09:04",
            "mcontent": "flask或者Django？"
        },
        {
            "mid": "62831299",
            "mtime": "2024-10-13 00:31",
            "mcontent": "看你用啥技术栈了，会js推荐学下vue3框架 写前端 后台这写接口用.net core webapi这个框架 这样前后端 解耦 以后你前端拓展就不用重新写后台了，ASP.NET 这个框架我是大概有六七年没用过了，在我这是过时的"
        },
        {
            "mid": "19218521",
            "mtime": "2024-10-16 08:36",
            "mcontent": "谢谢大佬，之前跟着b站上的视频学过vue，跟着教程创建一个小的购物网站，但是好难，又有好多问题，我记得什么better scroll这个插件还有好多bug，导致中途荒废了。"
        },
        {
            "mid": "63547769",
            "mtime": "2024-10-18 13:25",
            "mcontent": "事后扩展就好，整个订单模块早期做不考虑都行。半个月了，开始动手了吗"
        },
        {
            "mid": "202131",
            "mtime": "2024-12-02 22:18",
            "mcontent": "c#开发老狗的经验，直接用abp框架就行:[https:://abp.io/ 此网页不属于本网站，不保证其安全性  继续访问       取消 https://abp.io/ https://abp.io/]github 13k星星，包含全部的套路，没说错，就是套路。"
        }
    ]
}