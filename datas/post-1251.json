{
    "link": "https://bbs.nga.cn/read.php?tid=39576111",
    "title": "[讨论] 不知道是不是我学的不精，总感觉泛型好难读",
    "post_time": "2024-03-15 17:09",
    "uid": "62073702",
    "content": "平常读代码都是有意义的英文单词，怎么一到泛型一堆K T P的大写字母，看的头晕",
    "replies": [
        {
            "mid": "60635682",
            "mtime": "2024-03-15 17:18",
            "mcontent": "泛型就是假设输入进来的是任意玩意。在程序执行时，这个方法或者类入栈时就根据泛型入参实例化一遍(JAVA是生成桥接方法)"
        },
        {
            "mid": "43089971",
            "mtime": "2024-03-15 18:36",
            "mcontent": "很多时候没法假设这个泛型参数有什么实际语义，只好随便给个字母意思意思，类似于数学函数中常用的xyz有实际语义的泛型参数也是有的，比如cpp的模板库里面有很多函数的泛型参数是某种迭代器的类型比如Code c:1:2:3:4:template< std::input_iterator I, std::sentinel_for<I> S, class Proj = std::identity,\n          std::indirectly_unary_invocable<std::projected<I, Proj>> Fun >\nconstexpr for_each_result<I, Fun>\n    for_each( I first, S last, Fun f, Proj proj = {} );当然这个例子用上了concept 有觉得可读性好了吗"
        },
        {
            "mid": "62073702",
            "mtime": "2024-03-15 19:19",
            "mcontent": "wc更难懂了，天杀的谁发明的泛型一边是函数，一边是泛型，看着看着就头晕了"
        },
        {
            "mid": "62409105",
            "mtime": "2024-03-15 20:09",
            "mcontent": "类型参数名也没强制要求怎么写，只不过一般为了区分类型参数和类型，而且大部分用泛型的地方也不会有很多个类型参数，所以就用这种写法咯"
        },
        {
            "mid": "64388721",
            "mtime": "2024-03-19 14:36",
            "mcontent": "泛型的类型参数名，惯用一些缩写，基本上都可以猜测是啥单词的缩写，实在不知道可以问问搜索引擎(包括ChatGPT)。以Java为例：E - Element (在集合中使用，因为集合中存放的是元素)T - Type(Java 类)K - Key(键)V - Value(值)N - Number(数值类型)？ - 表示不确定的 java 类型泛型这语法确实带来了可读性问题，这没法避免，只能需要用到或见到时翻翻语法书、看看示例代码，或者问问ChatGPT。"
        },
        {
            "mid": "8777681",
            "mtime": "2024-03-19 17:06",
            "mcontent": "单泛型还好，有时候泛型还要继承，甚至继承泛型再搞点集合接口里面之类的，真的看着有点烦人的"
        },
        {
            "mid": "60717522",
            "mtime": "2024-03-20 19:51",
            "mcontent": "泛型是可以玩出花来的，之前看springsecurity的builder代码给我看麻了"
        },
        {
            "mid": "25328477",
            "mtime": "2024-04-05 21:53",
            "mcontent": "那个就相当于你小学学的x,y,z，就是个代号而已。"
        },
        {
            "mid": "42252406",
            "mtime": "2024-04-06 09:20",
            "mcontent": "全看编译器转换成更多的二进制编码。t 随便换别的都行，本质上是一种站位符的定义。所以c++写到后面越来越觉得是面向ide的。"
        }
    ]
}