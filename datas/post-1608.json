{
    "link": "https://bbs.nga.cn/read.php?tid=38907093",
    "title": "经常读源代码对自己能力的提升有帮助吗？",
    "post_time": "2024-01-05 13:45",
    "uid": "26335971",
    "content": "有大佬对我，“想提升自己的编程能力，要经常去读源代码什么的”",
    "replies": [
        {
            "mid": "63794763",
            "mtime": "2024-01-05 14:23",
            "mcontent": "想想都知道有没有用，问来做甚"
        },
        {
            "mid": "60547589",
            "mtime": "2024-01-05 14:49",
            "mcontent": "有一本书叫作stl源码剖析，大部分写c++没读过也听过。"
        },
        {
            "mid": "290046",
            "mtime": "2024-01-05 16:05",
            "mcontent": "有.字数补丁"
        },
        {
            "mid": "544943",
            "mtime": "2024-01-05 18:24",
            "mcontent": "如果你不知道为啥要去读，那大概是没有的"
        },
        {
            "mid": "1781995",
            "mtime": "2024-01-05 20:31",
            "mcontent": "现在的框架动辄几十万上百万行代码，各种抽象方法一层套一层，先用起来，然后带着目的去读，不然很容易晕。比如你用某个功能觉得很强大，就可以跟源码去看它怎么实现的，现在有GPT辅助看源码方便多了。"
        },
        {
            "mid": "62990965",
            "mtime": "2024-01-05 21:25",
            "mcontent": "学会提出问题，用程序辅助你解决问题证明你的猜想上班了之后感觉很多人写垃圾代码的能力丢了，成了框架程序员"
        },
        {
            "mid": "62840502",
            "mtime": "2024-01-05 22:09",
            "mcontent": "没有，框架是死的，想法和算法是活的"
        },
        {
            "mid": "65469096",
            "mtime": "2024-01-08 08:47",
            "mcontent": "提升能力从根本上只有一个方法，把自己放在解决困难问题的位置上，如果那个问题一定需要你解决，那么解决之后你就会获得成长读源码属于纯工具技能方面的东西，如果你的工作场景不需要这种东西，你把屠龙记倒背如流也没什么用"
        },
        {
            "mid": "8777681",
            "mtime": "2024-01-08 10:03",
            "mcontent": "不用经常读但看些好的代码，至少一些基本技能上还是得会现在纯ctrlcv，各种基本模式日志异常都写不溜的太多了"
        },
        {
            "mid": "43313113",
            "mtime": "2024-01-08 10:20",
            "mcontent": "真的吗 我感觉应该都知道啊"
        },
        {
            "mid": "63369903",
            "mtime": "2024-01-09 16:47",
            "mcontent": "没什么用，学完数据结构与算法其他就靠悟性了，很多垃圾代码还会误导你"
        },
        {
            "mid": "19874886",
            "mtime": "2024-01-14 18:36",
            "mcontent": "不要硬读，你用了什么就读什么，比如你写了List 去读ArrayList，用Map去读Hashmap，再去找一些分析文章看看。如果用Spring，就去理解下AOP，IOC是怎么实现的，用了哪些设计模式，带着目的去学更快 。"
        },
        {
            "mid": "43304940",
            "mtime": "2024-01-15 01:24",
            "mcontent": "有。多看看行业经典项目的代码有时候会学到一些有趣的思路和奇淫技巧。但是别瞎读，尽量选择和自己从事方向相关的项目代码读，带着思考读，不在于阅读数量重点在于思考。"
        },
        {
            "mid": "60594816",
            "mtime": "2024-01-15 14:43",
            "mcontent": "有一个需求你一直实现不了，这时候有一套久经考验的系统里有这个功能，你还能看源码，你说有没有提升？"
        },
        {
            "mid": "43089971",
            "mtime": "2024-01-15 15:08",
            "mcontent": "我觉得最重要的作用是有多种不同选择的时候,可以参考别人的选择来做决定学东西的时候会给你罗列出很多条通向罗马的大路,但是有时候知道哪条路比较合适更重要看别人的实现,尤其是有名的高质量的实现,能帮助你快速积累经验少走很多弯路"
        },
        {
            "mid": "42696145",
            "mtime": "2024-01-16 21:23",
            "mcontent": "那肯定有，就像你会识字就不需要读书了?"
        }
    ]
}